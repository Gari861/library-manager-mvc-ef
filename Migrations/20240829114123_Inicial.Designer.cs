// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppLibros.Models;

#nullable disable

namespace WebAppLibros.Migrations
{
    [DbContext(typeof(AppDBcontext))]
    [Migration("20240829114123_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAppLibros.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("WebAppLibros.Models.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadCopias")
                        .HasColumnType("int");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.Property<int>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("generoId")
                        .HasColumnType("int");

                    b.Property<int?>("ubicacionBibliotecaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("generoId");

                    b.HasIndex("ubicacionBibliotecaId");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("WebAppLibros.Models.UbicacionBiblioteca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seccion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UbicacionesBiblioteca");
                });

            modelBuilder.Entity("WebAppLibros.Models.Libro", b =>
                {
                    b.HasOne("WebAppLibros.Models.Genero", "genero")
                        .WithMany("Libros")
                        .HasForeignKey("generoId");

                    b.HasOne("WebAppLibros.Models.UbicacionBiblioteca", "ubicacionBiblioteca")
                        .WithMany("Libros")
                        .HasForeignKey("ubicacionBibliotecaId");

                    b.Navigation("genero");

                    b.Navigation("ubicacionBiblioteca");
                });

            modelBuilder.Entity("WebAppLibros.Models.Genero", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("WebAppLibros.Models.UbicacionBiblioteca", b =>
                {
                    b.Navigation("Libros");
                });
#pragma warning restore 612, 618
        }
    }
}
